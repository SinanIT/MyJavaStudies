method Overriding

-If you change the body of a method which is in parent  class before using in Child class, it is method overriding

- in method overriding we do not create a new method. we change the implementation and use it.
        --method name, method parameters (method signature) must not chance.
        --if the implementation is good enough no need to override. Just call it.
        --Access modifiers of overriding methods should be wider than overridden methods.
        -- If return type is primitive we can not touch the return type
        -- if return type is none-primitive you should have IS A relationship. Object can be change with String. Because String has IS A relationship with Object class


- POLYMORPHISM ==> Method overloading + Method Overriding

        --Method overloading compile time polymorphism. Called static polymorphism
        --Method overriding run time polymorphism. Called dynamic polymorphism
        --final method can not override. Final method body can not be updated.
        --private method can not be overridden.
        --if return typ of parent method primitive it can not change when it is override.
        --Static methods can not be overriding.
        --final classes can not have child classes

        If we use FINAL for;
        -Method: No update in bosy, no overriding
        -Class: No inheritance or no child class
        -Variable: Value of the variable can not be updated.(final variables must be initialize)


