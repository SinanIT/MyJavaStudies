Key Value structure. Like a dictionary

Map= Interface
        1- HasMap (Class)

        2- HasTable (Class)

        3- TreeMap (Class)

No duplication on Keys. It is unique.
Values can be same.
Key can be null for once except HashTable.
Values can have Null values multiple times except Hashtable
Words are in order according to Keys.
Maps are using curly Brakes

What is the main difference between HashMap and HashTable:
 1- HashTable does NOT accept null key and value.
 2- HashTable is able to do multi threading and Synchronization

HashMap:
1- Put the elements in random order, it is fast
2- It is NOT Thread-Safe.  HashMAp objects con NOT be used in multithreading
3- it is NOT Synchronized.
4- HashMap can have single null in keys part.
5- HashMap can have single null in value part.

How HashMap works internally in Java
1- If you fill 75% of buckets Java create new 16 buckets. This is called Load Factor.
2- Java Creates "hashCode" by using "Key", then converts it to existing indexes. Aftr that put the data into bucket using the index.
3- Sometimes indexes which are created from HashCode can be same. Tgis called "Hash Collision".
4- Java uses LinkedList in every bucket. If HAsh Collision occurs Java can put multiple data into the bucket using LinkedList structure.